C51 COMPILER V9.60.0.0   MAIN                                                              02/19/2020 02:19:24 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.OBJ
COMPILER INVOKED BY: Z:\home\vyldram\SimplicityStudio_v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe /home/vyldram/G
                    -it/C8051F340/C8051F340_EMIF/main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPE
                    -ED) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/vyldram/Git/C8051F340/C8051F340_EMIF;/home/vyldram/SimplicityStudio_v4/dev
                    -eloper/toolchains/keil_8051/9.60/INC/SiLABS/shared/si8051Base) REGFILE(C8051F340_EMIF.ORC) PRINT(.\main.lst) COND PAGEWI
                    -DTH(120) PAGELENGTH(65) OBJECT(.\main.OBJ)

line level    source

   1          /*
   2           * main.c
   3           *
   4           *  Created on: 13/01/2020
   5           *      Author: vyldram
   6           */
   7          
   8          #include <SiLABS\c8051F340.h>
   9          #include <SiLABS\shared\si8051Base\compiler_defs.h>
  10          #include <SiLABS\shared\si8051Base\si_toolchain.h>
  11          #include <INTRINS.H>
  12          
  13          #include <CONV.h>
  14          
  15          #include <Oscillator.h>
  16          #include <GPIO.h>
  17          #include <ADC0.h>
  18          #include <EXTI.h>
  19          #include <UART.h>
  20          #include <EMIF.h>
  21          
  22          INTERRUPT_PROTO(TIMER0_ISR, INTERRUPT_TIMER0);
  23          
  24          void TIMER0_vInit(void);
  25          
  26          unsigned char Timer0_Count=0;
  27          unsigned char Timer0_OF=0;
  28          unsigned char Timer0Refresh=1;
  29          unsigned short display[5]={0,0,0,0,0};
  30          
  31          xdata unsigned char pu8ExternalRam[1000] _at_ 0x8;
  32          xdata unsigned char pu8ExternalRam1[1000] _at_ 0x800;
  33          xdata unsigned short pu16ExternalRam2[0x1000] _at_ 0x1000;
  34          
  35          void main (void)
  36          {
  37   1              unsigned short ADCnumber=0; //variable que sirve para obtenel el nibble apropiado
  38   1              unsigned short mean=0;
  39   1              unsigned short value=0;
  40   1              unsigned char cont=0;
  41   1      
  42   1              PCA0MD &= ~0x40;                // WDTE = 0 (clear watchdog timer enable)
  43   1              PFE0CN |=0x20;                  //Enable Pre-fetch
  44   1              FLSCL|=0x10;                    //increase wait state
  45   1      
  46   1      
  47   1              EMIF_vInit();
  48   1              Oscillator_vInit(Oscillator_enSYSCLKSourceMult4);// Initialize Oscillator
  49   1              UART0_enInit(115200);
  50   1              ADC0_vInit();
  51   1              TIMER0_vInit();
  52   1      
C51 COMPILER V9.60.0.0   MAIN                                                              02/19/2020 02:19:24 PAGE 2   

  53   1              EA=1;
  54   1      
  55   1              UART0_u16Print((unsigned char*)"Fill XRAM off chip: \n\r");
  56   1              for(value=0;(unsigned short)value<(unsigned short)0x1000;value++)
  57   1              {
  58   2                      pu16ExternalRam2[value]=value;
  59   2              }
  60   1      
  61   1              UART0_u16Print((unsigned char*)"Verify XRAM: \n\r");
  62   1              for(value=0;(unsigned short)value<(unsigned short)0x1000;value++)
  63   1              {
  64   2                      UART0_u16Print((unsigned char*)"Direccion: ");
  65   2                      CONV__u8HexToString((unsigned short)&pu16ExternalRam2[value],(char*)display);
  66   2                      UART0_u16Print((unsigned char*)display);
  67   2                      UART0_u16Print((unsigned char*)"   \n\rValor: ");
  68   2                      CONV__u8HexToString((unsigned long)value,(char*)display);
  69   2                      UART0_u16Print((unsigned char*)display);
  70   2                      UART0_u16Print((unsigned char*)"=(?) ");
  71   2                      CONV__u8HexToString((unsigned long)pu16ExternalRam2[value],(char*)display);
  72   2                      UART0_u16Print((unsigned char*)display);
  73   2      
  74   2                      if(pu16ExternalRam2[value]!=value)
  75   2                      {
  76   3                              UART0_u16Print((unsigned char*)" Error");
  77   3                      }
  78   2                      UART0_u16Print((unsigned char*)"\n\r\n\r");
  79   2              }
  80   1              while (1)
  81   1              {
  82   2                      ADCnumber=ADC0_u16Sample();
  83   2                      mean+=ADCnumber;
  84   2                      if(cont >=32)
  85   2                      {
  86   3                              mean/=32;
  87   3                              value=mean;
  88   3                              mean=0;
  89   3                              cont=0;
  90   3                              if ((unsigned short)value < 0x200)                    // If switch depressed
  91   3                              {
  92   4                                      UART0_u16Print((unsigned char*)"LED ON  ");
  93   4                              }
  94   3                              else
  95   3                              {
  96   4                                      UART0_u16Print((unsigned char*)"LED OFF ");
  97   4                              }
  98   3                              CONV__u8UIntToString((unsigned long)value,(char*)display);
  99   3                              UART0_u16Print((unsigned char*)display);
 100   3                              UART0_u16Print((unsigned char*)"\n\r");
 101   3                      }
 102   2                      cont++;
 103   2              }                                   // end of while(1)
 104   1      }
 105          
 106          
 107          
 108          void TIMER0_vInit()
 109          {
 110   1              CKCON&=~0x3;
 111   1              CKCON|=2;       //sysclk/48= 1MHz
 112   1              CKCON&=~0x4; //clk = sysclk/div
 113   1      
 114   1              TMOD&=~0x3;
 115   1              TMOD|=2; //TIM0 autoreload
C51 COMPILER V9.60.0.0   MAIN                                                              02/19/2020 02:19:24 PAGE 3   

 116   1              TMOD&=~0x4; //TIM0 timer function
 117   1              TMOD&=~0x8; //timer active without external pin
 118   1              TH0=255-100; //100 count, 1M/100 = 10KHz= 100us , 0.1ms
 119   1              TL0=255-100;
 120   1              TCON&=~0x20; //clear TIM0 Overflow flag
 121   1              ET0=1; //enable TIM0 interrupt
 122   1              TCON|=0x10; //enable TIM0
 123   1      }
 124          
 125          
 126          
 127          INTERRUPT(TIMER0_ISR, INTERRUPT_TIMER0)
 128          {
 129   1              Timer0_Count++;
 130   1              Timer0_Count&=0x3;
 131   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    487    ----
   CONSTANT SIZE    =    103    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
